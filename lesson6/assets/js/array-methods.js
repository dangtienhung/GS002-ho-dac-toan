/*
Array methods - p2
1. foreach
2. map
3. filter
5. some
6. every
7. find
8. findIndex

4. reduce
*/

// javascript module

import { users } from './data.js';

// 1. foreach: d√πng ƒë·ªÉ duy·ªát qua t·ª´ng ph·∫ßn t·ª≠ c·ªßa m·∫£ng, kh√¥ng tr·∫£ v·ªÅ m·∫£ng m·ªõi
// for (let i = 0; i < users.length; i++) {
// 	console.log('üöÄ ~ i:', i);
// 	console.log(users[i]);
// }

// users.forEach(function (user, index) {
// 	console.log('üöÄ ~ index:', index);
// 	console.log(user);
// });

// 2. map: t·∫°o ra m·∫£ng m·ªõi t·ª´ m·∫£ng c≈© (thay ƒë·ªïi gi√° tr·ªã c·ªßa m·∫£ng c≈©)
// const newUsers = users.map(function (user, index) {
// 	return user.name;
// });
// console.log('üöÄ ~ newUsers ~ newUsers:', newUsers);

// 3. filter: (l·ªçc ra c√°c ph·∫ßn t·ª≠ th·ªèa m√£n ƒëi·ªÅu ki·ªán)
// const newUsers = users.filter(function (user, index) {
// 	return user.age > 23 && user.age < 29;
// });
// console.log('üöÄ ~ newUsers ~ newUsers:', newUsers);

// 5. some: ki·ªÉm tra xem c√≥ ph·∫ßn t·ª≠ n√†o th·ªèa m√£n ƒëi·ªÅu ki·ªán kh√¥ng
// const hasUser = users.some(function (user, index) {
// 	return user.isDie === false;
// });
// console.log('üöÄ ~ hasUser ~ hasUser:', hasUser);

// 6. every: ki·ªÉm tra xem t·∫•t c·∫£ ph·∫ßn t·ª≠ ·ªü trong m·∫£ng c√≥ th·ªèa m√£n ƒëi·ªÅu ki·ªán cho tr∆∞·ªõc kh√¥ng
// const isDie = users.every(function (user, index) {
// 	return user.isDie === false;
// });
// console.log('üöÄ ~ hasUser ~ hasUser:', isDie);

// 7. find: t√¨m ki·∫øm ph·∫ßn t·ª≠ ƒë·∫ßu ti√™n th·ªèa m√£n ƒëi·ªÅu ki·ªán
// const hasUser = users.find(function (user, index) {
// 	return user.isDie === true;
// });
// console.log('üöÄ ~ hasUser ~ hasUser:', hasUser);

// 8. findIndex: t√¨m ki·∫øm v·ªã tr√≠ (index) c·ªßa ph·∫ßn t·ª≠ ƒë·∫ßu ti√™n th·ªèa m√£n ƒëi·ªÅu ki·ªán
// const hasUser = users.findIndex(function (user, index) {
// 	return user.isDie === true;
// });
// console.log('üöÄ ~ hasUser ~ hasUser:', hasUser);

// 4. reduce: t√≠nh to√°n gi√° tr·ªã d·ª±a tr√™n c√°c ph·∫ßn t·ª≠ c·ªßa m·∫£ng
// const totalAge = users.reduce(function (
// 	accumulator, // gi√° tr·ªã t√≠ch l≈©y
// 	currentValue, // gi√° tr·ªã hi·ªán t·∫°i
// 	index // v·ªã tr√≠ c·ªßa ph·∫ßn t·ª≠ hi·ªán t·∫°i
// ) {
// 	console.table(`üöÄ ~ currentValue ~ currentValue:`, currentValue);
// 	console.table(`üöÄ ~ accumulator ~ accumulator:`, accumulator);
// 	console.table(`üöÄ ~ index ~ index:`, index);
// 	return accumulator + currentValue.age;
// }, 0);
// console.table('üöÄ ~ totalAge ~ totalAge:', totalAge);
// const totalAge = 0;
// for (let i = 0; i < users.length; i++) {
// 	totalAge += users[i].age;
// }
